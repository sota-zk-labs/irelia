version: '3.8'
networks:
  rust-api-server:
name: 'rust-services-docker'
services:
  quickwit:
    image: quickwit/quickwit:latest
    command: run
    restart: always
    environment:
      QW_ENABLE_OTLP_ENDPOINT: 'true'
      QW_ENABLE_JAEGER_ENDPOINT: 'true'
    ports:
      - '7280:7280'
      - '7281:7281'
  jaeger:
    image: jaegertracing/jaeger-query:latest
    restart: always
    depends_on:
      - quickwit
    environment:
      SPAN_STORAGE_TYPE: 'grpc-plugin'
      GRPC_STORAGE_SERVER: 'quickwit:7281'
    ports:
      - '16686:16686'
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest
    restart: always
    volumes:
      - redis:/data
    ports:
      - '6379:6379'
  public_server:
    image: public-server
    build:
      context: ../..
      target: public-server
    ports:
      - '8000:8000'
    volumes:
      - ./01_public_server_custom.toml:/user/01_custom.toml:ro
    depends_on:
      - postgres
    restart: on-failure:3
  public_worker:
    image: public-worker
    build:
      context: ../..
      target: public-worker
    ports:
      - '8001:8001'
    volumes:
      - ./01_public_worker_custom.toml:/user/01_custom.toml:ro
    depends_on:
      - postgres
    restart: on-failure:3
volumes:
  postgres:
  redis:
