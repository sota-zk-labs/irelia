name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  cargo-check:
    name: Cargo check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev
      - name: Set PKG_CONFIG_PATH
        run: echo "PKG_CONFIG_PATH=/usr/lib/pkgconfig" >> $GITHUB_ENV
      - uses: actions-rs/cargo@v1
        with:
          command: check

  fmt-check:
    name: Rust fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test-and-coverage:
    name: Test and Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev
          cargo install cargo-tarpaulin
      - name: Set PKG_CONFIG_PATH
        run: echo "PKG_CONFIG_PATH=/usr/lib/pkgconfig" >> $GITHUB_ENV
      - name: Run tests
        run: cargo tarpaulin --all-features --verbose --tests --skip-clean

  build-and-push:
    name: Build and push docker images to docker hub
    env:
      PKG_NAME: irelia-public-server
      PKG_NAME_WORKER: irelia-worker
    runs-on: ubuntu-latest
    needs: [cargo-check, fmt-check, test-and-coverage]
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ PKG_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ PKG_NAME_WORKER }}:latest
